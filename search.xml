<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Êï∞ÊçÆÂàÜÊûêËØæÁ®ãÂÆûÈ™å]]></title>
    <url>%2F2019%2F11%2F10%2F%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[ÂìàÂìàÂìàÔºåÂÆûÈ™åÂ§™Êó†ËÅä‰∫ÜÔºåÂÜôÂÜôblogÔºåËÆ∞ÂΩïÊó†ËÅäÁöÑÊï∞ÊçÆÊåñÊéòÂÆûÈ™åËØæÁ®ã„ÄÇÊàëÊòØÂàÜÂâ≤Á∫øÁ∫øÁ∫øÁ∫ø Á¨¨‰∫åÁ´†ÂÆûÈ™åÔºöÂÆûÈ™åÁéØÂ¢ÉÔºöpython3.7ÔºåpycharmÊâÄÊúâ‰ª£Á†ÅÂíåÊï∞ÊçÆÊîæÂú®ÊàëÁöÑgithubÈáåÈù¢Ôºögithub ÂÆûÈ™å‰∏ÄÔºöÁî®ÂÜíÊ≥°ÊéíÂ∫èÂÆûÁé∞ÊéíÂ∫è‰ª£Á†Å123456789def maopao(mylist): for i in range(0,len(mylist)-1): for j in range(0,len(mylist)-i-1): if mylist[j]&gt;mylist[j+1]: mylist[j],mylist[j+1]=mylist[j+1],mylist[j] return mylistSList = [5,6,3,4,8,1,9,0,2]print(maopao(SList)) ÂÆûÈ™å‰∫åÔºöÊääÊó•ÊúüÂíåÊòØÂê¶‰∏∫ËäÇÂÅáÊó•Â≠òÊîæÂà∞Â≠óÂÖ∏ÈáåÈù¢‰ª£Á†Å1234567891011121314151617181920import datetimeimport jsonstarttime=datetime.date(2016,5,1)s = "1605"datedic = &#123;&#125;for i in range(1,32): snum = "%02d"%i today = starttime.replace(day=i) if today.weekday()+1==6 or today.weekday()+1==7: holiday=1 else: holiday=0 datedic[s+snum]=holiday #print(today) #print(today.weekday()+1)#chaxun='160512'#print(datedic[chaxun])with open('holiday.json','w') as f: json.dump(datedic,f) ÂÆûÈ™å‰∏âÔºöËØªÂèñhorseColicÊñá‰ª∂ÔºåÂ∞ÜÊï∞ÊçÆÂíåÊ†áÁ≠æÂàÜÂà´Â≠òÂú®‰∏§‰∏™ÂàóË°®‰∏≠‰ª£Á†Å‰∏Ä12345678910111213dataArr = []labelarr = []with open('horseColic.txt','r') as f: for line in f.readlines(): Arr=[] line=line.strip() s = line.split("\t") Arr = s[:-1] dataArr.append(Arr) labelarr.append(s[-1])print(dataArr[0:3])print(labelarr[0:3]) ‰ª£Á†Å‰∫å1234567891011import pandas as pddataArr = []labelarr = []data=pd.read_csv("horseColic.txt",header=None,sep='\t')for i in range(data.shape[0]): l = list(data.iloc[i,0:21]) dataArr.append(l) labelarr.append(data.loc[i,21])print(dataArr[0:3])print(labelarr[0:3]) Á¨¨‰∏âÁ´†ÂÆûÈ™åÔºöÂÆûÈ™å‰∏ÄÔºöÈÄíÂΩíÊ±ÇÁ¨¨nÈ°πÁöÑÊñêÊ≥¢ÈÇ£Â•ëÊï∞ÂàóÊï∞Âàó‰ª£Á†Å‰∏Ä123456789# f(n) = f(n-1)+f(n-2)# üòÑÊòØÁúüÁöÑÊÖ¢def f(n): if n&lt;=2: return 1 else: return f(n-1)+f(n-2)print(f(10)) ‰ª£Á†Å‰∫åÈùûÈÄíÂΩíÂÆûÁé∞1234567n=100l=[1]*(n+1)l[1]=1l[2]=2for i in range(3,n+1): l[i]=l[i-1]+l[i-2]print(l[n]) Êú™ÂÆåÂæÖÁª≠ÔºÅÔºÅÔºÅÔºÅ]]></content>
      <categories>
        <category>‰Ωú‰∏ö</category>
      </categories>
      <tags>
        <tag>‰Ωú‰∏ö</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Test my Blog]]></title>
    <url>%2F2019%2F05%2F05%2F%E5%BC%A0%E6%98%8E%E8%A5%BF%E5%A4%A7%E4%BD%9C%E4%B8%9A%2F</url>
    <content type="text"><![CDATA[MarkdownÂü∫Êú¨ËØ≠Ê≥ïmarkdownÊòØ‰∏ÄÁßçÂèØ‰ª•ÊòØÊôÆÈÄöÊñáÊú¨ÁºñËæëÂô®ÁºñÂÜôÁöÑÊ†áËÆ∞ËØ≠Ë®Ä„ÄÇ ËøôÊòØ‰∏Ä‰∏™ÊÆµËêΩ ËøôÊòØÊñú‰ΩìËøôÊòØÁ≤ó‰ΩìËøôÊòØÁ≤óÊñú‰Ωì H2 this is first level of quoting this is nested blockquote ËøôÊòØ‰ª£Á†ÅÂå∫ÂüüÔºö123456#include&lt;iostream&gt;using namespace std;int main()&#123;cout&lt;&lt;&quot;shaoshilin&quot;;return 0;&#125;]]></content>
      <categories>
        <category>webÂâçÁ´Ø</category>
      </categories>
      <tags>
        <tag>‰Ωú‰∏ö</tag>
        <tag>ÂÖ∂‰ªñ</tag>
      </tags>
  </entry>
</search>
